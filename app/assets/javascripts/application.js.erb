// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, or any plugin's
// vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file. JavaScript code in this file should be added after the last require_* statement.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require rails-ujs
//= require turbolinks
//= require_tree 

//= require jquery
//= require bootstrap-sprockets

$(document).on('turbolinks:load', function() {

  $('button.following-state').hover(function(){
    $(this).css('background', 'red');
    $(this).text('Unfollow');
    }, function(){
    $(this).css('background', 'var(--mblue)');
    $(this).text('Following');
  }); // end following button hover

  $('.tweet-info .edit-tweet-btn').on('click', function(e) {
    e.preventDefault();
    $(this).parents('.show-area').css('display', 'none');
    $(this).parents('.tweet-info').children('.edit-tweet-form').css('display', 'block');
  });

  $('.edit-tweet-form .btn-danger').on('click', function(e) {
    e.preventDefault();
    $(this).parents('.tweet-info').children('.show-area').css('display', 'grid')
    $(this).parents('.edit-tweet-form').css('display', 'none');
  });

  $('.edit-tweet-form textarea').keyup(function(){
    var textarea = $(this).val();
    if (textarea.length == 0) {
      $(this).parents('.tweet-item').find('.btn-primary').attr('disabled', true);
    } else {
      $(this).parents('.tweet-item').find('.btn-primary').attr('disabled', false);
    } 
  });

  $(window).on('scroll', debounce(function(e){
    if (($(window).height() + $(window).scrollTop()) >= $(document).height()-100)  {

      $.ajax({
        url: "tweets/load?current_id=" + current_tweet_id,
        method: "GET",
        dataType: "json",
        success: function(data){
          var tweets = data["data"];
          $('#tweet-wall .loading').hide();
          if (tweets.length > 0) {
            tweets.forEach( function(element, index) {
              console.log(tweets[index]);
              $('#tweet-wall').append(tweets[index]["html"]);
              current_tweet_id = tweets[index]["id"];
            });
            $('#tweet-wall').append('<div class="text-center loading"><em>Loading...</em></div>');           
          } else {
            $('#tweet-wall').append('<div class="text-center no-more"><em>No more todo</em></div>');
            $(window).off('scroll');
          }
        }
      });
    }
  }));
});

function debounce(func, wait = 500, immediate = false) {
  var timeout;
  return function() {
      var context = this,
          args = arguments;
      var later = function() {
          timeout = null;
          if (!immediate) func.apply(context, args);
      }
      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) func.apply(context, args);
  }
} // lodash debounce function https://lodash.com/docs/4.17.5#debounce